{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBH,EAAY,QAASC,OAEhDG,EAAK,sBAAoBJ,EAAU,QAASC,MAAU,GAEzDA,EAAM,G,CA/BEO,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAqBC,GACnBA,EAAEC,iBACF,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cACN,IAAIC,EACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,GAAK,EACrCD,EAAMG,SAASnB,EAAMkB,OAASC,SAASN,EAAKK,MAAQD,GACpDnB,EAAcmB,EAAGD,GACdI,MAAKC,IACJC,EAAA1B,GAAS2B,OAAOC,QAAQH,EAAQ,IAEjCI,OAAMJ,IACLC,EAAA1B,GAAS2B,OAAOG,QAAQL,EAAQ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', handleClick);\n\nfunction handleClick(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  let lag;\n  for (let i = 0; i < amount.value; i += 1) {\n    lag = parseInt(delay.value) + parseInt(step.value * i);\n    createPromise(i, lag)\n      .then(message => {\n        Notiflix.Notify.success(message);\n      })\n      .catch(message => {\n        Notiflix.Notify.failure(message);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","currentTarget","lag","i","value","parseInt","then","message","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.71b5a4cb.js.map"}